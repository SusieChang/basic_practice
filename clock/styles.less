/**
cubic-bezier : https://cubic-bezier.com/#0,1.18,0,.99
**/
@clock-size: 300px;
@clock-outline-color: #ff0;
@clock-background-color: #333;

@hour-hand-length: 60px;
@hour-hand-width: 6px;
@hour-hand-color: coral;

@mintue-hand-length: 80px;
@mintue-hand-width: 4px;
@mintue-hand-color: cornflowerblue;

@second-hand-length: 100px;
@second-hand-width: 2px;
@second-hand-color: wheat;

@point-length: 16px;
@point-width: 2px;

* {
    margin: 0;
    padding: 0;
}

.container {
    width: 100vw;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: @clock-background-color;
}

.generate-point(@counter) when (@counter > 0) {
    @radius: @clock-size / 2 - @point-length / 2;

    &>i:nth-of-type(@{counter}) {
        @x: sin(@counter * pi() / 6) * @radius;
        @y: cos(@counter * pi() / 6) * @radius;
        transform: translate3d(@x, @y, 0) rotate(@counter * -30deg);
    }

    .generate-point(@counter - 1); // 递归调用自身
}

.generate-animation-run(@counter, @total) when(@counter >=0) {
    @per: 100% / @total * @counter;
    @angle: 360deg / @total;

    @{per} {
        transform: rotate(@counter * @angle);
    }

    .generate-animation-run((@counter - 1), @total);
}

@keyframes twelve-run {
    .generate-animation-run(12, 12);
}

@keyframes sixty-run {
    .generate-animation-run(60, 60);
}

#clock {
    box-sizing: content-box;
    width: @clock-size;
    height: @clock-size;
    border: 5px solid @clock-outline-color;
    background-color: @clock-background-color;
    border-radius: 50%;
    box-shadow: 0 0 20px gray;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    -ms-border-radius: 50%;
    -o-border-radius: 50%;
    position: relative;

    .clock-point {
        position: relative;
        width: 100%;
        height: 100%;
        .generate-point(12);
    }

    .clock-point i {
        position: absolute;
        display: inline-block;
        height: @point-length;
        width: @point-width;
        top: calc(@clock-size / 2 - @point-length / 2);
        left: calc(@clock-size / 2 - @point-width / 2);
        background-color: #fff;
        transform-origin: 50% 50% 0;
        -webkit-transform-origin: 50% 50% 0;
        -moz-transform-origin: 50% 50% 0;
        -ms-transform-origin: 50% 50% 0;
        -o-transform-origin: 50% 50% 0;
    }

    .hour-hand,
    .minute-hand,
    .second-hand {
        position: absolute;
        transform-origin: 50% 100% 0;
        -webkit-transform-origin: 50% 100% 0;
        -moz-transform-origin: 50% 100% 0;
        -ms-transform-origin: 50% 100% 0;
        -o-transform-origin: 50% 100% 0;
    }

    .hour-hand {
        height: @hour-hand-length;
        width: 0;
        margin-left: calc((@clock-size - @hour-hand-width) / 2);
        margin-top: calc(@clock-size / 2 - @hour-hand-length);
        border: @hour-hand-width solid @hour-hand-color;
        background-color: @hour-hand-color;
        border-radius: @hour-hand-width;
        animation: twelve-run 43200s cubic-bezier(1.000, 0, 1.000, 0) infinite;
    }

    .minute-hand {
        height: @mintue-hand-length;
        width: 0;
        margin-left: calc((@clock-size - @mintue-hand-width) / 2);
        margin-top: calc(@clock-size / 2 - @mintue-hand-length);
        border: @mintue-hand-width solid @mintue-hand-color;
        border-radius: @mintue-hand-width;
        background-color: @mintue-hand-color;
        animation: sixty-run 3600s cubic-bezier(1.000, 0, 1.000, 0) infinite;
    }

    .second-hand {
        height: @second-hand-length;
        width: 0;
        margin-left: calc((@clock-size - @second-hand-width) / 2);
        margin-top: calc(@clock-size / 2 - @second-hand-length);
        border: @second-hand-width solid @second-hand-color;
        border-radius: @second-hand-width;
        background-color: @second-hand-color;
        animation: sixty-run 60s cubic-bezier(1.000, 0, 1.000, 0) infinite;
    }
}